atom_name("h",h).
atom_name("he",he).
atom_name("li",li).
atom_name("be",be).
atom_name("b",b).
atom_name("c",c).
atom_name("n",n).
atom_name("o",o).
atom_name("f",f).
atom_name("ne",ne).
atom_name("no",no).
atom_name("al",al).
atom_name("si",si).
atom_name("p",p).
atom_name("s",s).
atom_name("na",na).
atom_name("cl",cl).
atom_name("ar",ar).
atom_name("k",k).
atom_name("ca",ca).
atom_name("sc",sc).
atom_name("ti",ti).
atom_name("v",v).
atom_name("cr",cr).
atom_name("mn",mn).
atom_name("fe",fe).
atom_name("co",co).
atom_name("ni",ni).
atom_name("cu",cu).
atom_name("zn",zn).
atom_name("ga",ga).
atom_name("de",de).
atom_name("as",as).
atom_name("se",se).
atom_name("br",br).
atom_name("kr",kr).
atom_name("rb",rb).
atom_name("sr",sr).
atom_name("y",y).
atom_name("zr",zr).
atom_name("nb",nb).
atom_name("mo",mo).
atom_name("tc",tc).
atom_name("ru",ru).
atom_name("rh",rh).
atom_name("pd",pd).
atom_name("ag",ag).
atom_name("cd",cd).
atom_name("in",in).
atom_name("sn",sn).
atom_name("sb",sb).
atom_name("te",te).
atom_name("i",i).
atom_name("xe",xe).
atom_name("cs",cs).
atom_name("ba",ba).
atom_name("la",la).
atom_name("ce",ce).
atom_name("pr",pr).
atom_name("nd",nd).
atom_name("pm",pm).
atom_name("sm",sm).
atom_name("eu",eu).
atom_name("gd",gd).
atom_name("tb",tb).
atom_name("dy",dy).
atom_name("ho",ho).
atom_name("er",er).
atom_name("tm",tm).
atom_name("yb",yb).
atom_name("lu",lu).
atom_name("hf",hf).
atom_name("ta",ta).
atom_name("w",w).
atom_name("re",re).
atom_name("os",os).
atom_name("ir",ir).
atom_name("pt",pt).
atom_name("au",au).
atom_name("hg",hg).
atom_name("tl",tl).
atom_name("pb",pb).
atom_name("bi",bi).
atom_name("po",po).
atom_name("at",at).
atom_name("rn",rn).
atom_name("fr",fr).
atom_name("ra",ra).
atom_name("ac",ac).
atom_name("th",th).
atom_name("pa",pa).
atom_name("u",u).
atom_name("np",np).
atom_name("pu",pu).
atom_name("am",am).
atom_name("cm",cm).
atom_name("bk",bk).
atom_name("cf",cf).
atom_name("es",es).
atom_name("fm",fm).
atom_name("md",md).
atom_name("no",no).
atom_name("lr",lr).
atom_name("rf",rf).
atom_name("db",db).
atom_name("sg",sg).
atom_name("bh",bh).
atom_name("hs",hs).
atom_name("mt",mt).
atom_name("ds",ds).
atom_name("rg",rg).
atom_name("cn",cn).
atom_name("uut",uut).
atom_name("fl",fl).
atom_name("uup",uup).
atom_name("lv",lv).
atom_name(" ",space).

%molecule_exact(Molecule_string,[Atom1,Atom2,...,AtomN]): Atom1 through AtomN are atoms and their names are concatenated into Molecule_string
molecule_exact(A,[An]):-atom_name(A,An).
molecule_exact(M,[An|T]):-atom_name(A,An),append(A,M2,M),molecule_exact(M2,T).
molecule_exact([],[]).

%molecule_errors(M,L,N): same as molecule, but N characters are not valid atoms. They are denoted by X.
molecule_errors(M,ListOfAtoms,0):-molecule_exact(M,ListOfAtoms).
molecule_errors(M,[An|T],NumberOfErrors):- NumberOfErrors > 0, atom_name(A,An) ,append(A,M2,M), molecule_errors(M2,T,NumberOfErrors).
molecule_errors([_|M],[x|T],NumberOfErrors):-NumberOfErrors>0, NewErrors is NumberOfErrors-1, molecule_errors(M,T,NewErrors).

%molecule_min_errors(M,L,N): only if molecule_errors(M,L,N) and there are no solutions for smaller N
molecule_min_errors(M,L,N):-molecule_min_max_errors(M,L,N,0).

%molecule_min_max_errors(M,L,-N_correct,+N_attempt): helper function.
molecule_min_max_errors(M,L,N_correct,N):-( molecule_errors(M,L,N) -> N_correct = N; N1 is N+1, molecule_min_max_errors(M,L,N_correct,N1)).